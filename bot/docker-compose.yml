version: '3.8'

services:
  # みやにゃんボット
  miya-bot:
    build:
      context: .
      dockerfile: Dockerfile.single
    container_name: miya-nyanco-bot
    environment:
      # ボットキャラクター指定
      - BOT_CHARACTER=miya
      
      # Discord トークン
      - DISCORD_BOT_TOKEN_MIYA=${DISCORD_BOT_TOKEN_MIYA}
      
      # Firebase 設定（どちらか一方があれば十分）
      - FIREBASE_SERVICE_ACCOUNT=${FIREBASE_SERVICE_ACCOUNT:-}
      - FIREBASE_SERVICE_ACCOUNT_KEY_PATH=/app/firebase-key.json
      
      # Gemini API
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      
      # Cloud Run設定
      - K_SERVICE=${K_SERVICE:-}
      - PORT=8081
    ports:
      - "8081:8081"
    restart: unless-stopped
    volumes:
      # Firebase キーファイルがローカルにある場合（コンテナ内は固定パス）
      - ${FIREBASE_SERVICE_ACCOUNT_KEY_PATH:-/dev/null}:/app/firebase-key.json:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - nyanco-network

  # イヴにゃんボット
  eve-bot:
    build:
      context: .
      dockerfile: Dockerfile.single
    container_name: eve-nyanco-bot
    environment:
      # ボットキャラクター指定
      - BOT_CHARACTER=eve
      
      # Discord トークン
      - DISCORD_BOT_TOKEN_EVE=${DISCORD_BOT_TOKEN_EVE}
      
      # Firebase 設定（どちらか一方があれば十分）
      - FIREBASE_SERVICE_ACCOUNT=${FIREBASE_SERVICE_ACCOUNT:-}
      - FIREBASE_SERVICE_ACCOUNT_KEY_PATH=/app/firebase-key.json
      
      # Gemini API
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      
      # Cloud Run設定
      - K_SERVICE=${K_SERVICE:-}
      - PORT=8082
    ports:
      - "8082:8082"
    restart: unless-stopped
    volumes:
      # Firebase キーファイルがローカルにある場合（コンテナ内は固定パス）
      - ${FIREBASE_SERVICE_ACCOUNT_KEY_PATH:-/dev/null}:/app/firebase-key.json:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - nyanco-network

networks:
  nyanco-network:
    driver: bridge

# 永続化が必要な場合のボリューム定義
volumes:
  # 必要に応じてログやデータ保存用のボリュームを追加
  bot-logs: